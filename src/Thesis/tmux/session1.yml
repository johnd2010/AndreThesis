# do not modify these
root: ./
name: simulation
socket_name: mrs
attach: false
tmux_options: -f /etc/ctu-mrs/tmux.conf
# you can modify these
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_NAME=uav1; export UAV_TYPE=f550; export PLATFORM_CONFIG=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml; export CUSTOM_CONFIG=./config/custom_config.yaml; export WORLD_CONFIG=./config/world_config.yaml; export NETWORK_CONFIG=./config/network_config.yaml
startup_window: rosbag
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        # - waitForRos; roslaunch mrs_uav_gazebo_simulation simulation.launch world_file:=/home/andre/thesis/worlds/test_city.world gui:=false
        # - waitForRos; roslaunch mrs_uav_gazebo_simulation simulation.launch world_file:=/home/andre/thesis/worlds/forest.world gui:=false
        - sgig; waitForRos; roslaunch mrs_uav_gazebo_simulation simulation.launch world_file:=`rospack find visualizer`/worlds/MRS/worlds/forest_shortened.world  gui:=false 
        # - waitForRos; roslaunch mrs_uav_gazebo_simulation simulation.launch world_name:=forest gui:=false
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-ouster model:=OS0-128 use_gpu:=True --pos -50 0 1 0"
      #   - export UAV_NAME=uav1; waitForControl; gz camera -c gzclient_camera -f $UAV_NAME; history -s gz camera -c gzclient_camera -f $UAV_NAME
  - status:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_uav_status status.launch
  - hw_api:
      layout: tiled
      panes:
        -  waitForTime; roslaunch mrs_uav_px4_api api.launch

  - core:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_uav_core core.launch custom_config:=./config/custom_config.yaml

  - automatic_start:
      layout: tiled
      panes:
        - waitForControl; ~/.i3/layout_manager.sh ./layout.json; exit
        - waitForHw; roslaunch mrs_uav_autostart automatic_start.launch; exit
        - waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard; exit
        - waitForTime; roslaunch mrs_tf_connector tf_connector.launch custom_config:=./config/tf_connector.yaml

  - rviz:
      layout: tiled
      panes:
        - waitForControl; rosrun rviz rviz -d ./uav.rviz
        - waitForControl; roslaunch mrs_rviz_plugins rviz_interface.launch
        - waitForControl; roslaunch mrs_rviz_plugins load_robot.launch
  # - pcl_tools:
  #     layout: tiled
  #     panes:
  #       - waitForHw; roslaunch mrs_pcl_tools pcl_filter.launch custom_config:=./config/pcl_filter.yaml name_suffix:=ouster topic_3d_lidar_in:=os_cloud_nodelet/points
  - octomap:
      layout: tiled
      panes:
        - waitForControl; source /home/gloria/Documents/Baseline/AndreThesis/devel/setup.bash; roslaunch octomap_server octomap_mapping.launch 
        - waitForControl; source /home/gloria/Documents/Baseline/AndreThesis/devel/setup.bash; roslaunch mrs_octomap_planner octomap_planner.launch custom_config:=./config/octomap_planner.yaml
        - waitFoTakeoff; source /home/gloria/Documents/Baseline/AndreThesis/devel/setup.bash; roslaunch frontier_exploration explore.launch num_uavs:=1 uav_id:=1
        # - waitForRos; rostopic echo /uav1/results/data
  # - rosbag:
  #     layout: tiled
  #     panes:
  #       - cd bags/1_uav; waitForControl; sleep 30; rosbag record /uav1/results /uav1/estimation_manager/odom_main --duration=20m
  #       - waitForRos; rostopic echo /uav1/results/data
