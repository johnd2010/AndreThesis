mrs_uav_managers:

  estimation_manager:

    # loaded state estimator plugins
    state_estimators: [
      "gps_garmin",
      "gps_baro",
      "rtk",
      "ground_truth",
    ]

    initial_state_estimator: "rtk" # will be used as the first state estimator
    agl_height_estimator: "garmin_agl" # only slightly filtered height for checking min height (not used in control feedback)

  uav_manager:

    takeoff:

      during_takeoff:
        controller: "MpcController"
        tracker: "LandoffTracker"

      after_takeoff:
        controller: "MpcController" # more robust
        # controller: "Se3Controller" # more precise
        tracker: "MpcTracker"

      takeoff_height: 2.0 # [m]

  constraint_manager:

    estimator_types: [
      "gps_garmin",
      "gps_baro",
      "rtk",
      "ground_truth",
    ]

    constraints: [
      "slow",
      "medium",
      "fast",
    ]

    # list of allowed constraints per odometry mode
    allowed_constraints:
      gps_garmin: ["slow", "medium", "fast"]
      gps_baro: ["slow", "medium", "fast"]
      rtk: ["slow", "medium", "fast"]
      ground_truth: ["slow", "medium", "fast"]

    # those constraints will be used automatically when a localization mode switches
    # and the current constraints are not in the allowed list (next paragraphs)
    default_constraints:
      gps_garmin: "slow"
      gps_baro: "slow"
      rtk: "medium"
      ground_truth: "medium"

mrs_uav_trackers:

  mpc_tracker:

    wiggle:
      enabled: false
      amplitude: 0.5 # [m]
      frequency: 0.2 # [Hz]

    # mrs collision avoidance
    collision_avoidance:

      enabled:           true # disabling this will stop this UAV to react to others, but it will still transmit data to others
      enabled_passively: true # disabling this will stop this uav to even transmit its data to others (only if enabled: false)
      radius: 2.0 # [m]
      correction: 1.0 # [m]

mrs_uav_trajectory_generation:

  # execution time limiter
  max_time: 0.5 # [s]

  # check and fix the max deviation between the input path and the output trajectory
  # by subsampling the original path with more waypoints
  check_trajectory_deviation:
    max_deviation: 0.20 # [m]

  # allows to neglect waypoints in the original path if the new path
  # does not violate max distance from the original path.
  # This makes for similar but sparser paths, which are easier for the
  # trajectory generator to work with.
  path_straightener:
    enabled: true
    max_deviation: 0.20 # [m]